plugins {
  "path element" {
    "alias": "com.addthis.hydra.task.output.tree.PathAlias"
    "branch": "com.addthis.hydra.task.output.tree.PathBranch"
    "call": "com.addthis.hydra.task.output.tree.PathCall"
    "const": "com.addthis.hydra.task.output.tree.PathValue"
    "debug": "com.addthis.hydra.task.output.tree.PathDebug"
    "file": "com.addthis.hydra.task.output.tree.PathFile"
    "keyop": "com.addthis.hydra.task.output.tree.PathKeyOp"
    "op": "com.addthis.hydra.task.output.tree.PathOp"
    "prune": "com.addthis.hydra.task.output.tree.PathPrune"
    "output": "com.addthis.hydra.task.output.tree.PathOutput"
    "query": "com.addthis.hydra.task.output.tree.PathQuery"
    "value": "com.addthis.hydra.task.output.tree.PathKeyValue"
  }

  "values output" {
    file: "com.addthis.hydra.task.output.ValuesOutputFile"
  }

  "stream bundleizer" {
    "channel": "com.addthis.hydra.task.source.bundleizer.ChannelBundleizer"
    "column": "com.addthis.hydra.task.source.bundleizer.ColumnBundleizer"
    "json": "com.addthis.hydra.task.source.bundleizer.JSONBundleizer"
    "kv": "com.addthis.hydra.task.source.bundleizer.KVBundleizer"
  }

  "output sink" {
    "chain": "com.addthis.hydra.task.output.TaskDataOutputChain"
    "file": "com.addthis.hydra.task.output.DataOutputFile"
    "filtered": "com.addthis.hydra.task.output.FilteredDataOutput"
    "tree": "com.addthis.hydra.task.output.tree.TreeMapper"
  }

  "values stream formatter" {
    "kv": "com.addthis.hydra.task.output.ValueStreamFormatKV"
    "tsv": "com.addthis.hydra.task.output.ValueStreamFormatTSV"
  }

  "output stream formatter" {
    "channel": "com.addthis.hydra.task.output.OutputStreamChannel"
    "column": "com.addthis.hydra.task.output.OutputStreamColumnized"
    "noop": "com.addthis.hydra.task.output.OutputStreamNoop"
  }

  "Hydra job" {
    hoover: "com.addthis.hydra.task.hoover.Hoover"
    map: "com.addthis.hydra.task.map.StreamMapper"
    treestats: "com.addthis.hydra.task.treestats.TreeStatisticsJob"
  }

  "input source" {
    "channel": "com.addthis.hydra.task.source.DataSourceChannel"
    "empty": "com.addthis.hydra.task.source.DataSourceEmpty"
    "filter": "com.addthis.hydra.task.source.DataSourceFiltered"
    "hashed": "com.addthis.hydra.task.source.DataSourceHashed"
    "files": "com.addthis.hydra.task.source.DataSourceStreamFiles"
    "prefetch": "com.addthis.hydra.task.source.DataSourcePrefetch"
    "range": "com.addthis.hydra.task.source.DataSourceRange"
    "aggregate": "com.addthis.hydra.task.source.AggregateTaskDataSource"
    "mesh2": "com.addthis.hydra.task.source.DataSourceMeshy2"
    "sorted": "com.addthis.hydra.task.source.SortedTaskDataSource"
  }

  "factory input stream" {
    "file": "com.addthis.hydra.task.source.FactoryInputStream$FileInputStreamSource"
    "inject": "com.addthis.hydra.task.source.FactoryInputStream$InjectorStreamSource"
    "socket": "com.addthis.hydra.task.source.FactoryInputStream$SocketInputStreamSource"
  }

  "stream builder" {
    "sortDeDupe": "com.addthis.hydra.task.map.SortedDeDupBuilder"
    "rowSplitter": "com.addthis.hydra.task.map.StreamRowSplitBuilder"
    "each": "com.addthis.hydra.task.map.EachStreamBuilder"
    "closeableFilter": "com.addthis.hydra.task.map.CloseableBundleFilterStreamBuilder"
    "join": "com.addthis.hydra.task.map.StreamJoin"
    "chain": "com.addthis.hydra.task.map.StreamChain"
  }
}